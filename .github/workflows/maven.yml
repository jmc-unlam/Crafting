# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    tags: ['v*'] # Solo se activa con tags que empiezan por 'v'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jar_path: ${{ steps.build.outputs.jar_path }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build and Test
      id: build
      run: |
        mvn -B verify
        JAR_PATH=$(ls target/*-jar-with-dependencies.jar)
        echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT

     - name: Upload Artifact
       uses: actions/upload-artifact@v4
       with:
         name: build-artifacts
         path: |
           target/*.jar
           target/*-jar-with-dependencies.jar

  release: # Nuevo job para la release
      needs: build # Asegura que el job de build se complete primero
      if: startsWith(github.ref, 'refs/tags/v')  # Solo ejecutar para tags
      runs-on: ubuntu-latest

      steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *-jar-with-dependencies.jar
          tag_name: ${{ github.ref_name }}  # Usa el tag que dispar√≥ el workflow
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
