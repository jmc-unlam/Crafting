# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven # Este paso compila el código
      run: mvn -B compile --file pom.xml 

    - name: Run Maven Tests # Ejecuta solo los tests
      run: mvn -B test --file pom.xml 

    - name: Package with Maven # para crear el JAR
      run: mvn -B package --file pom.xml

  release: # Nuevo job para la release
      needs: build # Asegura que el job de build se complete primero
      if: startsWith(github.ref, 'refs/tags/') # Solo ejecuta si el evento es un tag
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v4 # Necesario para acceder a los artifacts si el job es independiente
        - name: Download all workflow artifacts # Si los jobs son independientes, necesitas descargar el JAR
          uses: actions/download-artifact@v4
          with:
            name: your-fat-jar 

        - name: Create Release and Upload Artifact
          uses: softprops/action-gh-release@v1
          with:
            files: |
              target/*-jar-with-dependencies.jar
            generate_release_notes: true
            # La propiedad prerelease se basará en la versión de tu POM, que ya es 1.0.0-beta
            # o puedes ajustarla según la lógica de tu tag (ej. v1.0.0-beta)
            prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
